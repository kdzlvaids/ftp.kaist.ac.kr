#!/usr/bin/env bash
# pkg.xml -- Status summary of this package in XML
# 
# Created: 2006-04-07
# 
# Written by Jaeho Shin <netj@sparcs.org>.
# (C) 2006, Geoul Project. (http://ftp.kaist.ac.kr/geoul)

# options and usage
usage() {
    local cmd=`basename "$0"`
    if [ -t 1 ]; then
        cat <<EOF
Usage:
  $cmd -h  shows this usage
  $cmd -f  shows full package information
EOF
        [ $# -le 0 ] || echo "$cmd: $@"
    fi
    exit 2
}
full=false
while getopts "hf" o; do
    case "$o" in
        f) full=true ;;
        h) usage ;;
    esac
done

. /mirror/lib/pkg.sh

## gather information
# sync info
lastupdated=
failed=
started=
sync_in_progress && started=`isodate -r lock`
[ -f timestamp ] && lastupdated=`isodate -r timestamp`

# references
currentref=`log_uri log`
successref=`log_uri .success.log.gz`
failureref=`log_uri .failure.log.gz`

# status
compute_times # defines: timepast interval failures delay remaining
if [ -n "$source" ]; then
    if [ -n "$frequency" ]; then
        if [ -f timestamp ]; then
            status=good
            #if [ $timepast -ge $interval ]; then
            ratio=$(( $timepast / $validsecs ))
            if   [ $ratio -ge 7 ]; then status=dead
            elif [ $ratio -ge 3 ]; then status=bad
            elif [ $ratio -ge 1 ]; then status=old
            fi
            #fi
        else 
            status=unknown
        fi
    else
        status=down
    fi
else
    status=original
fi
[ $failures -gt 0 ] && failed=$failures || failed=

# urlpath
urlpath=${datapath#$FTPRootPath}
[ "$datapath" = "$urlpath" ] && urlpath=



## show things in XML
echo "<package id='$pkg'"
# name
echo " name='${name:-$pkg}'"
# visibility
$visible || echo " hidden='true'"
echo ">"

# links
{
    [ -f links ] && cat links
    if [ -n "$urlpath" ]; then
        cat <<EOF
HTTP	$HTTPRootURL$urlpath
FTP	$FTPRootURL$urlpath
EOF
    fi
} | sed -e 's:\(.*\)	\(.*\):<link rel="\1" href="\2"/>:'

# notes
if [ -f note ]; then
    echo "<note><![CDATA["
    cat note
    echo "]]></note>"
fi

# synchronization
if [ -n "$source" ]; then
    echo "<sync${source:+ source='$source'} ${frequency:+ frequency='$frequency'}/>"
fi

# status
echo "<status>"
{
    if [ -n "$lastupdated" ]; then
        echo "<updated${successref:+ href='$successref'}${lastupdated:+ timestamp='$lastupdated'}/>"
    fi
    if [ "${failed:-0}" -gt 0 ]; then
        # TODO failure timestamp
        echo "<failed${failureref:+ href='$failureref'} count='${failed:-0}'/>"
    fi
    if [ -n "$started" ]; then
        echo "<updating${currentref:+ href='$currentref'}${started:+ timestamp='$started'}/>"
    fi

    if ls usage.*.rrd &>/dev/null; then
        # TODO: actual usage info using rrdtool fetch
        echo "<usage/>"
    fi

    if [ -f du.rrd ]; then
        # TODO: actual size info using rrdtool fetch
        echo "<size/>"
    fi
}
echo "</status>"

echo "</package>"

# vim:ft=sh
