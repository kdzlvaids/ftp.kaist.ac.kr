#!/usr/bin/env bash
# analyze -- analyze the clf under given working directory
# 
# See http://oss.oetiker.ch/rrdtool/ for RRDtool.
# CLF here, stands for Combined Log Format rather than Common Log Format.
# See http://httpd.apache.org/docs/1.3/logs.html#combined for combined
# and http://en.wikipedia.org/wiki/Common_Log_Format for common.
#  
# Created: 2008-02-13
# 
# Written by Jaeho Shin <netj@sparcs.org>.
# (C) 2008, Geoul Project. (http://ftp.kaist.ac.kr/geoul)
set -e

. /mirror/lib/geoul.sh

# configuration
: ${RRDRoot:=/mirror/pkgs}
: ${RRDStep:=3600}

# directory to work on
wd=$1; shift

# generate webalizer report from clf
webalize-clf $wd/clf &

# process clf
if ! [ -e $wd/usage ]; then
    if ! [ -e $wd/tsv ]; then
        clf2tsv <$wd/clf >$wd/tsv.all
    fi
    clean-tsv $wd/tsv.err <$wd/tsv.all >$wd/tsv
fi
tsv2usage <$wd/tsv >$wd/usage
# now we have RRD update parameters for each pkg in $wd/usage

# update rrd
update() {
    ( . /mirror/lib/pkg.sh
    # for each service
    for svcd in /mirror/svcs/*; do
        # check if measuring usage is enabled
        [ -e $svcd/measure-usage ] || continue
        svc=`basename $svcd`
        rrd=$RRDRoot/$pkg/usage.$svc.rrd
        # create if no rrd is there
        [ -e $rrd ] || create-rrd $rrd $RRDStep
        # search rrd update parameters from analyzed usage
        params=`grep "$pkg	$svc	" <$wd/usage | cut -f3-`
        # or simply update with zeros
        params=${params:-0 0}
        # TODO: updating with $wd/usage's timestamp might be better
        synchronized $rrd.lock \
        update-rrd $rrd $params
    done
    )
}
foreachpkg update

# clean up
rm -rf $wd
